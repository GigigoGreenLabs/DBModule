apply plugin: 'com.android.library'

android {
  compileSdkVersion 25
  buildToolsVersion "25.0.2"

  defaultConfig {
    minSdkVersion 10
    targetSdkVersion 25
    versionCode 1
    versionName "1.0"
  }
  buildTypes {
    release {
      minifyEnabled false
      proguardFiles getDefaultProguardFile('proguard-android.txt'), 'proguard-rules.pro'
    }
  }
  dataBinding {
    enabled = true
  }

  //duplicate if we add project dbannotattion to dependencies
    packagingOptions {
      exclude '../dbprocessor/build/libs/dbprocessor.jar'
    }

}

dependencies {
  compile fileTree(include: ['*.jar'], dir: 'libs')
  testCompile 'junit:junit:4.12'
}
//asv this is the fuuuuuucking way, if we use cp or cmd in jitpack or whatver never works
task copyTask(type: Copy) {
  from '../dbprocessor/build/libs/dbprocessor.jar'
  into 'libs/'
}
copyTask.dependsOn(':dbprocessor:build')

preBuild.dependsOn(copyTask)
/*
* 1.-:processor:build will generate the jar file with our annotation and its processor
* 2.-processorTask will copy this jar file to the android app/libs/ folder
* 3.-The :app module will now reference the new jar.
* */
//asv keep that for rememnber the rigth way, and the OperatingSystem if is nice for use that
//por una tarea de copia de files p`ropia de gradle
  /*annotation processor
  task processorTask(type: Exec) {

    if (OperatingSystem.current().isWindows()) {
      commandLine 'cmd','/c','cp', '../dbprocessor/build/libs/dbprocessor.jar', 'libs/'
    } else {
      commandLine 'cp', '../dbprocessor/build/libs/dbprocessor.jar', 'libs/'
    }
  }
    processorTask.dependsOn(':dbprocessor:build')
    preBuild.dependsOn(processorTask)
  */



